type IssueGuide @model @auth(rules: [{allow: public}]) {
  issue: Issue!
  options: [Option!]
  author: String!
  version: String!
  status: String!
  updatedAt: AWSDateTime!
}

type Issue {
    title: String!
    description: String!
    presentationUrl: String
    documentUrl: String
    additionalDocuments: [AdditionalDocument]
    exitUrl: String
    exitUrlParameters: [ExitUrlParameter!]
}

type AdditionalDocument {
    name: String!
    url: String!
}

type ExitUrlParameter {
    name: String!
    value: String!
}

type Option {
    title: String!
    description: String!
    presentationUrl: String
    actions: [Action!]
}

type Action {
    description: String!
    drawbacks: [Drawback!]
}

type Drawback {
    description: String!
}

type ScheduledForum @model @auth(rules: [{allow: public}]) {
  forumId: String!
  joinId: String!
  issueGuide: IssueGuide!
  title: String!
  startDate: AWSDateTime!
  moderator: String!
  requireAuthentication: Boolean!
  guestList: [String!]
  blacklist: [String!]
  eventCategory: String!
  lobbyOpenTime: AWSDateTime!
  informedConsent: Boolean!
  demographicQuestions: Boolean!
  forumReport: Boolean!
  exitUrl: String
  exitUrlParameters: [ExitUrlParameter!]
  messageToParticipants: String
  chat: [Chat!]
  participants: [Participant!]
}

type Gala @model @auth(rules: [{allow: public}]) {
  forumId: String!
  joinId: String!
  issueGuide: IssueGuide!
  title: String!
  startDate: AWSDateTime!
  endDate: AWSDateTime!
  moderators: [String!]
  requireAuthentication: Boolean!
  guestList: [String!]
  blacklist: [String!]
  eventCategory: String!
  numberOfParticipants: Int!
  repeatedParticipation: Int!
  totalParticipants: Int!
  informedConsent: Boolean!
  demographicQuestions: Boolean!
  forumReport: Boolean!
  futureForumsUrl: String!
  exitUrl: String
  exitUrlParameters: [ExitUrlParameter!]
  messageToParticipants: String
  chat: [Chat!]
  participants: [Participant!]
}

type Participant {
  name: String!
  email: String!
  role: String!
}

type Chat @model @auth(rules: [{allow: public}]) {
  id: ID!
  message: String!
  email: String!
  timestamp: AWSDateTime!
  isPublic: Boolean!
  recipient: String
  reactions: [Reaction] @hasMany
}

type Reaction @model @auth(rules: [{allow: public}]) {
  id: ID!
  emoji: String!
  count: Int!
  chat: Chat! @belongsTo
}

type UserPresence @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String!
  status: String!
  lastActiveTimestamp: AWSDateTime!
}
 